{"name":"SPLAT","tagline":"Speech Processing & Linguistic Annotation Tool","body":"## Project Description\r\nSPLAT is a command-line application designed to make it easy for linguists (both computer-oriented and non-computer-oriented) to use the [Natural Language ToolKit](http://www.nltk.org/) (NLTK) for analyzing virtually any text file.\r\n\r\nSPLAT is designed to help you annotate text files and it is assumed that most input files will not be already annotated. In order for SPLAT to function properly, you should ensure that the input files that you provide do not contain any annotations. Because there are so many variations of linguistic annotation schemes, it would simply be impossible to account for all of them in the initial parsing of input files; it is easier for you to remove any existing annotations than it is for me to do so.\r\n\r\n## System Requirements\r\nSPLAT is being developed and tested on 64-bit Ubuntu 15.10 with Python 3.4.3. Minimum requirements include:\r\n* Python 3.4 or Later\r\n* NLTK 3.1 or Later (for frequency distributions and Tree structures)\r\n* Java (for the Berkeley Parser)\r\n\r\n## Installation\r\n1. Ensure that Python is installed on your machine.\r\n2. Download the install file: [install](/install)\r\n3. Run the following in a command line:\r\n``` bash\r\n    chmod +x path/to/install\r\n    ./path/to/install\r\n```\r\n\r\nTo uninstall run the following in a command line.\r\n```bash\r\n    rm -rf ~/.SPLAT\r\n```\r\n\r\n## General Commands\r\n```bash\r\n    splat --commands                # List all available commands\r\n    splat --help                    # Provide helpful information\r\n    splat --info                    # Display version and copyright information\r\n    splat --usage                   # Display basic command line structure\r\n    splat bubble filename           # Display the raw text from the file\r\n```\r\n\r\n## Analysis Functionality \\& Usage\r\n#### Types \\& Tokens\r\n```bash\r\n    splat tokens filename           # List all Tokens\r\n    splat types filename            # List all Types\r\n    splat ttr filename              # Calculate Type-Token Ratio\r\n    splat wc filename               # Word Count (Token Count)\r\n    splat uwc filename              # Unique Word Count (Type Count)\r\n```\r\n##### Parts-Of-Speech\r\n```bash\r\n    splat pos filename              # List Tokens with their Parts-Of-Speech\r\n    splat poscounts filename        # List Part-Of-Speech Tags with their Frequencies\r\n```\r\n#### Syntactic Complexity\r\n```bash\r\n    splat cdensity filename         # Calculate Content-Density\r\n    splat idensity filename         # Calculate Idea Density\r\n    splat yngve filename            # (UNDER REVIEW) Calculate Yngve-Score\r\n    splat frazier filename          # (UNDER REVIEW) Calculate Frazier-Score\r\n```\r\n#### Listing Content \\& Function Words\r\n```bash\r\n    splat function filename         # List all Function Words\r\n    splat content filename          # List all Content Words\r\n    splat ufunction filename        # Unique Function Words\r\n    splat ucontent filename         # Unique Content Words\r\n    splat cfr filename              # Calculate Content-Function Ratio\r\n```\r\n#### Utterances \\& Sentences\r\n```bash\r\n    splat utts filename             # List all Utterances\r\n    splat sents filename            # List all Sentences\r\n    splat alu filename              # Average Utterance Length\r\n    splat als filename              # Average Sentence Length\r\n    splat uttcount filename         # Utterance Count\r\n    splat sentcount filename        # Sentence Count\r\n    splat wpu filename              # List the Number of Words in each Utterance\r\n    splat wps filename              # List the number of Words in each Sentence\r\n```\r\n#### Frequency Distributions\r\n```bash\r\n    splat mostfreq filename x       # List the x Most Frequent Words\r\n    splat leastfreq filename x      # List the x Least Frequent Words\r\n    splat plotfreq filename x       # Draw and Display a Frequency Graph\r\n```\r\n#### Disfluencies\r\n```bash\r\n    splat disfluencies filename     # Calculate various Disfluency Counts\r\n    splat dpa filename              # List the Number of Disfluencies per each Dialog Act\r\n    splat dpu filename              # List the Number of Disfluencies in each Utterance\r\n    splat dps filename              # List the Number of Disfluencies in each Sentence\r\n```\r\n#### Syntactic Parsing\r\n```bash\r\n    splat trees filename            # List Parse-Tree Strings for each Utterance\r\n    splat maxdepth filename         # Calculate Max Tree Depth\r\n    splat drawtrees filename        # Draw Parse Trees\r\n```\r\n#### Language Modeling\r\n```bash\r\n    splat unigrams filename         # List all Unigrams\r\n    splat bigrams filename          # List all Bigrams\r\n    splat trigrams filename         # List all Trigrams\r\n    splat ngrams filename n         # List all n-grams\r\n```\r\n\r\n## Annotation Functionality \\& Usage\r\n```bash\r\n    splat annotate filename         # Semi-Automatically annotate the Utterances\r\n```\r\n\r\n## Release Notes\r\n#### Release 3.0\r\n* SPLAT has been reorganized into packages so that it can either be used as a Python library, or as a command-line tool.\r\n* The command-line interface has been cleaned up, and hopefully looks better.\r\n* Dependencies on non-standard libraries have been greatly reduced.\r\n  * NLTK is a requirement for frequency distributions and Tree structures. This will hopefully change soon.\r\n  * The Berkeley Parser has been packaged with SPLAT in order for parse trees to be generated. This is likely a permanent dependency. \r\n* SPLAT functions have been optimized to increase efficiency and User satisfaction.\r\n\r\n#### Release 2.0\r\n* The Berkeley Parser and NLTK have been integrated with the application.\r\n* The provided functionality is, for the most part, complete - that is, there isn't much more I plan to add at this time.\r\n\r\n#### Release 1.0\r\n* The application is now fully integrated with bash, removing some nasty reimplementing of code from previous versions.\r\n* The provided functionality is far from complete; more will be coming, hopefully soon!\r\n\r\n## Acknowledgments\r\nI would like to thank Emily Prud'hommeaux and Cissi Ovesdotter-Alm for their guidance during my initial development process. I would also like to thank Bryan Meyers, my brother, letting me bounce ideas off of him, and for giving me wake-up calls when I was doing something in the less-than-intelligent (stupid) way.\r\n* Emily Tucker Prud'hommeaux < <emilypx@rit.edu> > < [CLaSP](http://www.rit.edu/clasp/people.html) >\r\n* Cissi Ovesdotter-Alm < <coacla@rit.edu> > < [CLaSP](http://www.rit.edu/clasp/people.html) >\r\n* Bryan T. Meyers < <bmeyers@datadrake.com> > < [DataDrake](http://www.datadrake.com/) > < [GitHub](https://github.com/DataDrake) >\r\n\r\n## Contact Information\r\nBenjamin S. Meyers < <bsm9339@rit.edu> >\r\n\r\n## Licensing\r\nSee [LICENSE.md](/LICENSE.md).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}